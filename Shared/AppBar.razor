@using AdrianTube2.Services
@using AdrianTube2.Shared.UI
@using AdrianTube2.state
@using AdrianTube2.Models.Movie
@inject AuthService AuthService
@inject AuthenticationStateProvider _authenticationStateProvider
@inject IToastService ToastService
@inject MovieService MovieService
@inject MovieState MovieState
@using Blazored.Toast.Configuration

<nav id="appbar" class="nav w-100">
    <div class="bg-primary d-flex justify-content-between p-2 w-100">
        <div class="d-flex gap-2 align-items-center">
            <a class="text-light text-uppercase fw-bolder text-decoration-none bg-secondary p-2 rounded logo" href="">AdrianTube2</a>
        </div>
        <div>
            <AuthorizeView>
                <Authorized>
                    <div class="d-flex align-items-center gap-2 text-light h-100">
                        <SearchMovie ContainerClass="d-none d-sm-flex me-4"  />
                        <IconButton title="Add movie" style="width: 30px; height: 30px;" Variant="IconButton.ButtonVariant.None" class="d-flex justify-content-center align-items-center text-light rounded-circle" @onclick="ShowAddMovieModal">
                            <i class="oi oi-plus"></i>
                        </IconButton>
                        <p>Hello <strong>@context.User.Identity?.Name!</strong></p>
                        <Button Variant="Button.ButtonVariant.Secondary" @onclick="Logout">
                            <i class="oi oi-account-logout"></i>
                        </Button>
                    </div>
                    <BlazoredToasts Position="ToastPosition.BottomRight" Timeout="10" />
                    <NewMovieModal IsShow="@IsShowMovieModal" IsShowMovieModalChanged="@((bool value) => IsShowMovieModal = value)" />
                </Authorized>
                <NotAuthorized>
                    <div class="d-flex align-items-center ">
                        <Button Variant="Button.ButtonVariant.Secondary" @onclick="Login">
                            <i class="oi oi-account-login"></i>
                        </Button>
                    </div>
                </NotAuthorized>
            </AuthorizeView>
        </div>
    </div>
</nav>

@code {
    public bool IsShowMovieModal { get; set; }

    bool IsLoading { get; set; } = false;

    private async Task Logout()
    {
        try
        {
            await ((CustomAuthenticationStateProvider)_authenticationStateProvider).Logout();
            ToastService.ShowSuccess("Logout successful");
        }
        catch (System.Exception)
        {
            ToastService.ShowError("Logout failed");
        }
    }

    private void ShowAddMovieModal()
    {
       IsShowMovieModal = true;
    }

    private void Login() {
        AuthService.RedirectToLoginPage();
    }
}