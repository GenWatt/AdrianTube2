@inject IToastService ToastService
@inject ISubscriptionService SubscriptionService
@inject IMovieService MovieService
@inject ISubscriptionState Subscriptionstate

<div>
    <h3 class="text-muted">Views:
        @if (IsLoading) {
            <Loader />
        } else {
            @ViewsCount
        }
    </h3>
    <h2 class="mb-2">@Movie.Title</h2>
    <hr />
    <div>
        <div class="d-flex justify-content-between mt-2 flex-wrap gap-2">
            <div class="d-flex flex-wrap">
                <Avatar User="@Movie.User" UsernameClass="fs-5 f-bold" />
                <div>
                    <SubscribeMovie User="@Movie.User" />
                </div>
            </div>
            <MovieActions Movie="@Movie" />
        </div>
    </div>
    <p class="mt-2">@Movie.Description</p>
</div>

@code {
    [Parameter]
    public Movie Movie { get; set; }
    public int ViewsCount { get; set; }
    public bool IsLoading { get; set; } = true;

    protected async override Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        try {
            ViewsCount = await MovieService.GetViewsCount(Movie.Id);
        }
        catch (Exception)
        {
            ToastService.ShowError("Problem to load movie data ocurred.");
        }
        finally {
            IsLoading = false;
        }
    }
}
