@inject IToastService ToastService
@inject IMovieService MovieService
@inject IMovieState MovieState

<div>
    <SerachInput OnSearch="@SearchMovies" IsLoading="@IsLoading" ContainerClass="@ContainerClass" />
    <SearchdMovieList Movies="@Movies" />
</div>

@code {
    bool IsLoading { get; set; } = false;
    [Parameter] public string ContainerClass { get; set; }
    string SearchQuery { get; set; } = "";
    List<Movie> Movies { get; set; } = new List<Movie>();

    private async Task SearchMovies(string searchQuery)
    {
        if (searchQuery == SearchQuery) return;
        SearchQuery = searchQuery;
        IsLoading = true;
        try
        {
            if (string.IsNullOrWhiteSpace(SearchQuery))
            {
                Movies.Clear();
                return;
            }
            await GetMoviesByTitle(SearchQuery);
        }
        catch {
            ToastService.ShowError("Something went wrong while searching for movies");
        }
        finally
        {
            IsLoading = false;
        }
    }

    private async Task GetMoviesByTitle(string searchQuery)
    {
        var movies = await MovieService.GetMoviesByTitle(searchQuery);

        Movies = movies;
    }
}